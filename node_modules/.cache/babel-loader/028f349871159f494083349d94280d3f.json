{"ast":null,"code":"import _objectSpread from \"/home/dnderon/clean-project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/dnderon/clean-project/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  bacon: 1.0,\n  meat: 1.5,\n  batatapalha: 0.35\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0,\n        batatapalha: 0\n      },\n      totalPrice: 4,\n      purchasabale: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCounted;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return; // truque pra evitar que o javascript de remover de bug quando ele nao tiver o ingrediente\n      } // simplesmente evita que o resto da função seja executada\n\n\n      const updatedCounted = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCounted;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  updatePurchaseState() {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/dnderon/clean-project/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","INGREDIENT_PRICES","salad","cheese","bacon","meat","batatapalha","BurgerBuilder","state","ingredients","totalPrice","purchasabale","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","purchasable","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux'\n\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal';\n\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    bacon: 1.0,\n    meat: 1.5,\n    batatapalha: 0.35,\n};\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0,\n            batatapalha: 0,\n        },\n        totalPrice: 4,\n        purchasabale: false\n\n    };\n\n    updatePurchaseState () {\n\n        const sum = Object.keys(ingredients)\n        .map(igKey => {\n            return ingredients[igKey];\n        })\n        .reduce ((sum, el) => {\n            return sum + el\n        }, 0);\n        this.setState({purchasable: sum > 0})\n\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n\n\n    };\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return; // truque pra evitar que o javascript de remover de bug quando ele nao tiver o ingrediente\n        } // simplesmente evita que o resto da função seja executada\n        const updatedCounted = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    };\n\n    render() {\n        const disabledInfo = { // pra desativar o botao vou usar dentro do render\n            ...this.state.ingredients \n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        \n        return (\n            <Aux>\n                <Modal />\n                <Burger ingredients={this.state.ingredients}/><br/>\n            <BuildControls \n                ingredientAdded={this.addIngredientHandler}\n                ingredientRemoved={this.removeIngredientHandler}\n                disabled={disabledInfo} \n                price={this.state.totalPrice}\n                purchasable={this.state.purchasable}\n                />\n            </Aux>\n        )\n\n    }\n\n\n}\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}