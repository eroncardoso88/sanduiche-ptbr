{"ast":null,"code":"import _objectSpread from \"/home/dnderon/clean-project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/dnderon/clean-project/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/Ordersummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  bacon: 1.0,\n  meat: 1.5,\n  batatapalha: 0.35,\n  purchasing: false\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0,\n        batatapalha: 0\n      },\n      totalPrice: 4,\n      purchasabale: false\n    };\n\n    this.purchaseContinuedHandler = () => {\n      alert('Continue!');\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCounted = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCounted;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return; // truque pra evitar que o javascript de remover de bug quando ele nao tiver o ingrediente\n      } // simplesmente evita que o resto da função seja executada\n\n\n      const updatedCounted = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCounted;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinuedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/dnderon/clean-project/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","bacon","meat","batatapalha","purchasing","BurgerBuilder","state","ingredients","totalPrice","purchasabale","purchaseContinuedHandler","alert","purchaseCancelHandler","setState","purchaseHandler","addIngredientHandler","type","oldCount","updatedCounted","updatedIngredients","priceAddition","oldPrice","newPrice","updatePurchaseState","removeIngredientHandler","priceDeduction","sum","Object","keys","map","igKey","reduce","el","purchasable","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux'\n\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/Ordersummary';\n\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    bacon: 1.0,\n    meat: 1.5,\n    batatapalha: 0.35,\n    purchasing: false\n};\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0,\n            batatapalha: 0,\n        },\n        totalPrice: 4,\n        purchasabale: false\n\n    };\n\n    purchaseContinuedHandler = () => {\n        alert('Continue!');\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false})\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true})\n    }\n\n    updatePurchaseState (ingredients) {\n\n        const sum = Object.keys(ingredients)\n        .map(igKey => {\n            return ingredients[igKey];\n        })\n        .reduce ((sum, el) => {\n            return sum + el\n        }, 0);\n        this.setState({purchasable: sum > 0})\n\n    }\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCounted = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n\n    };\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) {\n            return; // truque pra evitar que o javascript de remover de bug quando ele nao tiver o ingrediente\n        } // simplesmente evita que o resto da função seja executada\n        const updatedCounted = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCounted;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n        this.updatePurchaseState(updatedIngredients);\n\n    };\n\n    render() {\n        const disabledInfo = { // pra desativar o botao vou usar dentro do render\n            ...this.state.ingredients \n        };\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        \n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    <OrderSummary ingredients={this.state.ingredients} \n                    purchaseCancelled={this.purchaseCancelHandler}\n                    purchaseContinued={this.purchaseContinuedHandler}\n                    />\n                </Modal>\n                <Burger ingredients={this.state.ingredients}/><br/>\n            <BuildControls \n                ingredientAdded={this.addIngredientHandler}\n                ingredientRemoved={this.removeIngredientHandler}\n                disabled={disabledInfo} \n                price={this.state.totalPrice}\n                purchasable={this.state.purchasable}\n                ordered={this.purchaseHandler}\n                />\n            </Aux>\n        )\n\n    }\n\n\n}\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}